name: Build Flatpak

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  flatpak:
    name: Build Flatpak
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:gnome-47
      options: --privileged

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build flatpak
      uses: flatpak/flatpak-github-actions/flatpak-builder@v6
      with:
        bundle: io.github.ublue.RebaseTool.flatpak
        manifest-path: io.github.ublue.RebaseTool.json
        cache-key: flatpak-builder-${{ github.sha }}

    - name: Upload flatpak bundle
      uses: actions/upload-artifact@v4
      with:
        name: flatpak-bundle
        path: io.github.ublue.RebaseTool.flatpak
        retention-days: 7

  release:
    name: Create Release
    needs: flatpak
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, '[release]')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download flatpak bundle
      uses: actions/download-artifact@v4
      with:
        name: flatpak-bundle

    - name: Get version from metainfo
      id: get_version
      run: |
        VERSION=$(grep -oPm1 "(?<=<release version=\")[^\"]+" data/metainfo/io.github.ublue.RebaseTool.metainfo.xml | head -1)
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Version found: ${VERSION}"

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create v${{ steps.get_version.outputs.VERSION }} \
          --title "Release v${{ steps.get_version.outputs.VERSION }}" \
          --notes "## Atomic Image Manager v${{ steps.get_version.outputs.VERSION }}
        
        ### Installation
        \`\`\`bash
        # Download the flatpak file, then:
        flatpak install --user io.github.ublue.RebaseTool.flatpak
        
        # Or install runtime first if needed:
        flatpak install flathub org.gnome.Platform//47
        flatpak install --user io.github.ublue.RebaseTool.flatpak
        \`\`\`
        
        ### Features
        - Native GTK4/libadwaita interface
        - Live progress tracking with command output
        - Support for Fedora atomic and Universal Blue variants
        - Full deployment history access
        - Safe rebase and rollback operations
        
        ### Requirements
        - Flatpak
        - GNOME 47 runtime
        - Atomic/ostree system (Silverblue, Kinoite, Universal Blue variants)"

    - name: Upload Release Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload v${{ steps.get_version.outputs.VERSION }} \
          ./io.github.ublue.RebaseTool.flatpak \
          --clobber